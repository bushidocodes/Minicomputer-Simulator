######################################################################
# Program 2                                                          #
# Reads a set of a paragraph of 6 sentences from a file into memory. #
# It prints the sentences on the console printer. It then asks the   #
# user for a word. It searches the paragraph to see if it contains   #
# the word. If so, it prints out the word, the sentence number, and  #
# the word number in the sentence.                                   #
######################################################################
# Stack data
#  Note: Base User Program, so Address of Program is in address 16
#  0 - Base Address of Program
#  1 - Address of First character in Heap Dataset -- first character in the paragraph
#  2 - Character length of the paragraph
#  3 - Address of first character in the user-entered word
# Initialization
LDX 1,0,16;          0 - Load IX1 with the base address of the stack frame
LDX 2,0,18;          1 - Load IX2 with the base address of the dataset
LDA 0,2,1,1;         2 - Load R0 with the first usable word of the dataset (cursor)
STR 0,1,1;           3 - Store the first usable word of the dataset to local[1]
LDX 2,1,0;           4 - Load IX2 with the base address of the program
CHK 1,2;             5 - Store the length of the paragraph to local[2]
STR 1,1,2;           6
# Execute read-string
JSR 0,24,1;          7
# Check R0 for RC. If not 0, jump to error
LDX 1,0,16;          8 - Load IX1 with the base address of the stack frame
LDX 2,1,0;           9 - Load IX2 with the base address of the program
JNE 0,2,12;         10 - If RC > 0, Jump to error condition (TBD)                  !needs update
LDR 0,1,1;          11 - Load R0 with initial cursor position in local[1]
# Execute print-string
JSR 0,25,1;         12
# Prompt the user for a word. Assumes c(28) = 32, c(29) = 64, c(30)=96.
LDX 1,0,28;         13
LDX 2,0,29;         14
LDX 3,0,30;         15
LDA 0,2,23;         16 - W
OUT 0,1;            17
LDA 0,3,15;         18 - o
OUT 0,1;            19
LDA 0,3,18;         20 - r
OUT 0,1;            21
LDA 0,3,4;          22 - d
OUT 0,1;            23
LDA 0,1,31;         24 - ?
OUT 0,1;            25
LDA 0,0,10;         26 - \n
OUT 0,1;            27
# Store the address of the user-entered word
LDX 1,0,16;         28 - Load IX1 with the base address of the stack frame
LDX 2,0,18;         29 - Load IX2 with the base address of the dataset
LDA 0,2,1,1;        30 - Load R0 with the first usable word of the dataset (cursor)
AMR 0,1,2;          31 - Add the length of the paragraph local[2] to R0 - next free word in the heap
STR 0,1,3;          32 - Store the address of the user-entered word to local[3]
LDX 2,1,3;          33 - Load IX2 with the cursor for the user word, local[3]
IN 0,0;             34 - Allow the user to type a word into the console keyboard
STR 0,1,3,1;        35 - Store the first character of the word at the cursor
# How do we read a string from the keyboard?
# DEBUG print the user-entered word
LDX 1,0,16;         36 - Load IX1 with the base address of the stack frame
LDX 2,1,0;          37 - Load IX2 with the base address of the program
LDR 0,1,3;          38 - Load R0 with initial cursor position in local[3]
# DEBUG Execute print-string
JSR 0,25,1;         39
TRAP 0;             40